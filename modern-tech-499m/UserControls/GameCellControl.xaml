<UserControl x:Class="modern_tech_499m.UserControls.GameCellControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:modern_tech_499m.UserControls"
             xmlns:viewmodels="clr-namespace:modern_tech_499m.ViewModels"
             xmlns:converters="clr-namespace:modern_tech_499m.Converters"
             mc:Ignorable="d" 
             x:Name="currentControl"
             d:DesignHeight="100" d:DesignWidth="200">

    <!--THERE IS NO VIEWMODEL FOR NOW, BECAUSE IT'S NOT WORKING -->
    <UserControl.Resources>
        <Style x:Key="ContentStyle" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">

                        <!--Main circle -->
                        <!-- Can't bind background based on IsActiveCell property, because ColorAnimation crashing -->
                        <Border x:Name="background"
                                CornerRadius="30"
                                MinWidth="40"
                                MinHeight="40"
                                Background="{StaticResource ForegroundLightTealBrush}"
                                BorderThickness="2"
                                BorderBrush="{StaticResource ForegroundVeryDarkBrush}">

                            <!-- Cell value text -->
                            <Viewbox>
                                <TextBlock x:Name="foreground" Text="{Binding ElementName=currentControl, Path=CellValue, NotifyOnTargetUpdated=True}"
                                           RenderTransformOrigin="0.5 0.5"
                                           Focusable="False"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Foreground="{StaticResource ForegroundPurpleBrush}"
                                           FontSize="{StaticResource FontSizeXLarge}"
                                           FontFamily="{StaticResource LatoBold}">

                                    <!-- Text render transform to do the text change visual event -->
                                    <TextBlock.RenderTransform>
                                        <ScaleTransform x:Name="cellValueScaleTransform" ScaleX="1" ScaleY="1"></ScaleTransform>
                                    </TextBlock.RenderTransform>
                                    <TextBlock.Triggers>

                                        <!-- Binding text change visual event to CellValue updated event -->
                                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="cellValueScaleTransform" Storyboard.TargetProperty="ScaleX" AutoReverse="False"/>
                                                    <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="cellValueScaleTransform" Storyboard.TargetProperty="ScaleY" AutoReverse="False"/>
                                                    <DoubleAnimation To="1" Duration="0:0:0.3" BeginTime="0:0:0.3" Storyboard.TargetName="cellValueScaleTransform" Storyboard.TargetProperty="ScaleX" AutoReverse="False"/>
                                                    <DoubleAnimation To="1" Duration="0:0:0.3" BeginTime="0:0:0.3" Storyboard.TargetName="cellValueScaleTransform" Storyboard.TargetProperty="ScaleY" AutoReverse="False"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </TextBlock.Triggers>
                                </TextBlock>
                            </Viewbox>

                            <!-- Cell glowing effect -->
                            <Border.Effect>
                                <DropShadowEffect x:Name="buttonShadowEffect" ShadowDepth="0"
                                                  Color="{StaticResource ForegroundLightPurple}"
                                                  Opacity="0"
                                                  BlurRadius="100"/>
                            </Border.Effect>

                            <!-- Cell click event trigger -->
                            <Border.InputBindings>
                                <MouseBinding Gesture="LeftClick"
                                              Command="{Binding ElementName=currentControl, Path=ClickCommand}"
                                              CommandParameter="{Binding ElementName=currentControl, Path=ClickCommandParameter}"/>
                            </Border.InputBindings>
                        </Border>

                        <!--Triggers -->
                        <ControlTemplate.Triggers>

                            <!-- Show glowing effect only if current cell is active -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=currentControl, Path=IsActiveCell}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonShadowEffect" Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="1" AutoReverse="True" RepeatBehavior="Forever"/>
                                                <ColorAnimation To="{StaticResource ForegroundVeryLightPurple}" Duration="0:0:1" Storyboard.TargetName="background" Storyboard.TargetProperty="Background.Color"/>
                                                <ColorAnimation To="{StaticResource ForegroundDarkPurple}" Duration="0:0:1" Storyboard.TargetName="foreground" Storyboard.TargetProperty="Foreground.Color"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="buttonShadowEffect" Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="0" AutoReverse="False"/>
                                            <ColorAnimation To="{StaticResource ForegroundLightTeal}" Duration="0:0:1" Storyboard.TargetName="background" Storyboard.TargetProperty="Background.Color"/>
                                            <ColorAnimation To="{StaticResource ForegroundPurple}" Duration="0:0:1" Storyboard.TargetName="foreground" Storyboard.TargetProperty="Foreground.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <ContentControl x:Name="Control" Style="{StaticResource ContentStyle}"/>
</UserControl>
